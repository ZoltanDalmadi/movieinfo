load_module /etc/nginx/modules/ngx_http_image_filter_module.so;

events {
  worker_connections 1024;
}

http {
  include mime.types;
  default_type application/octet-stream;
  sendfile on;
  #keepalive_timeout 65;
  #gzip on;

  log_format custom_log '[$time_iso8601] [$server_name] [Cache: $upstream_cache_status] $uri $status $body_bytes_sent B "$http_user_agent"';

  server {
    # Internal image resizing server.
    server_name resizer;
    listen 8888;

    access_log /var/log/nginx/access.log custom_log;

    image_filter_jpeg_quality 90;
    image_filter_interlace on;
    image_filter_buffer 8M;
    # image_filter_sharpen 25;

    # necessary for not returning 415 if an image is not found
    error_page 404 /empty;
    location /empty {
      return 404;
    }

    location ~ "^/width/(?<width>\d+)/(?<image>.+)$" {
      alias /var/www/images/$image;
      image_filter resize $width -;
    }

    location ~ "^/height/(?<height>\d+)/(?<image>.+)$" {
      alias /var/www/images/$image;
      image_filter resize - $height;
    }

    location ~ "^/both/(?<width>\d+)/(?<height>\d+)/(?<image>.+)$" {
      alias /var/www/images/$image;
      image_filter resize $width $height;
      image_filter crop $width $height;
    }

  }

  proxy_cache_path /tmp/nginx-images-cache/ levels=1:2 keys_zone=images:10m inactive=24h max_size=10m use_temp_path=off;
  proxy_cache_path /tmp/nginx-api-cache/ levels=1:2 keys_zone=api:10m inactive=5m max_size=10m use_temp_path=off;

  upstream resizer {
    server 127.0.0.1:8888;
  }

  server {
    # Public-facing cache server.
    server_name gateway;
    listen 8080;
    proxy_cache images;
    proxy_cache_valid 200 24h;

    access_log /var/log/nginx/access.log custom_log;

    # Both width and height is specified
    location ~ "^/media/(?<image>.+)_(?<width>\d+)x(?<height>\d+)(?<ext>\.(?:png|jpg))$" {
      # proxy_pass http://127.0.0.1:8888/both/$width/$height/$image$ext;
      proxy_pass http://resizer/both/$width/$height/$image$ext;
    }

    # Only width is specified
    location ~ "^/media/(?<image>.+)_(?<width>\d+)x(?<ext>\.(?:png|jpg))$" {
      # proxy_pass http://127.0.0.1:8888/width/$width/$image$ext;
      proxy_pass http://resizer/width/$width/$image$ext;
    }

    # Only height is specified
    location ~ "^/media/(?<image>.+)_x(?<height>\d+)(?<ext>\.(?:png|jpg))$" {
      # proxy_pass http://127.0.0.1:8888/height/$height/$image$ext;
      proxy_pass http://resizer/height/$height/$image$ext;
    }

    # Just serve the base images
    location ~ "^/media/(?<image>.+)$" {
      alias /var/www/images/$image;
    }

    # Proxy for the API
    location /api/ {
      proxy_pass http://127.0.0.1:3000/;
    }

    # Proxy for MovieDB API
    location /moviedb/ {
      proxy_pass https://api.themoviedb.org/3/;
      proxy_cache api;
      proxy_cache_valid 200 5m;
    }
  }
}
